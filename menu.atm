val pico = require "pico"

val Menu = @{}

func Menu.Button (pos, tit) {
    val img = ren where {
        sfc = IMG.load("data/images/menuitem.png") -> assert
        ren = REN::createTextureFromSurface(sfc) -> assert
    }
    val a = @{x=pos.x-(w/2)-->math.floor, y=pos.y-(h/2)-->math.floor, w=w, h=h} where {
        _,_,w,h = img::query()
    }
    val b = @{x=pos.x-(w/2)-->math.floor, y=pos.y-(h/2)-->math.floor} where {
        w,h = FNT::sizeText(tit)
    }
    spawn {
        every :Pico.Draw {
            REN::copy(img, nil, a)
            pico.write(FNT, tit, b)
        }
    }
    await(:Pico.Mouse.Button.Dn, pico.point_vs_rect(evt, a))
}

func Menu.Main () {
    par_or {
        await Menu.Button(pico.pct_to_pos(25,25), "Story")
        :Menu_Story
    } with {
        await Menu.Button(pico.pct_to_pos(75,25), "Editor")
        :Menu_Editor
    } with {
        await Menu.Button(pico.pct_to_pos(25,50), "Levelsets")
        :Menu_Levelsets
    } with {
        await Menu.Button(pico.pct_to_pos(75,50), "Options")
        :Menu_Options
    } with {
        await Menu.Button(pico.pct_to_pos(50,75), "Exit")
        :Menu_Exit
    }
}

return(Menu)
